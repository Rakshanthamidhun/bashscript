#time module
import time
print(time.time())  # in secs
#o/p : 1652693577.8854203

print(time.localtime(time.time()))
'''o/p : time.struct_time(tm_year=2022, tm_mon=5, tm_mday=16, tm_hour=9, tm_min=35, tm_sec=14, tm_wday=0, tm_yday=136, tm_isdst=0) 
in form of tuple, tm_isdst -->day light saving ie summer(1), tm_mon: month, tm_mday:month day, tm_wday: weekday (monday-->0), tm_yday: year day ''' 

print(time.asctime())
#o/p: Mon May 16 09:38:45 2022

#info about prev or next time
tuple1=(1996,6,6,9,20,3,0,0,0)
print(time.mktime(tuple1))
#o/p : 834052803.0

print(time.localtime(time.mktime(tuple1)))
#o/p : time.struct_time(tm_year=1996, tm_mon=6, tm_mday=6, tm_hour=9, tm_min=20, tm_sec=3, tm_wday=3, tm_yday=158, tm_isdst=0), last 3 args taken randomly

time.sleep(5) #delay execution
print("hello")

#calendar module
import calendar
print(calendar.month(2000,7))
print(calendar.calendar(2000))
'''o/p 
July 2000
Mo Tu We Th Fr Sa Su
                1  2
 3  4  5  6  7  8  9
10 11 12 13 14 15 16
17 18 19 20 21 22 23
24 25 26 27 28 29 30
31

--------------------
2000

      January                   February                   March
Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su
                1  2          1  2  3  4  5  6             1  2  3  4  5
 3  4  5  6  7  8  9       7  8  9 10 11 12 13       6  7  8  9 10 11 12
10 11 12 13 14 15 16      14 15 16 17 18 19 20      13 14 15 16 17 18 19
17 18 19 20 21 22 23      21 22 23 24 25 26 27      20 21 22 23 24 25 26
24 25 26 27 28 29 30      28 29                     27 28 29 30 31
31

       April                      May                       June
Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su
                1  2       1  2  3  4  5  6  7                1  2  3  4
 3  4  5  6  7  8  9       8  9 10 11 12 13 14       5  6  7  8  9 10 11
10 11 12 13 14 15 16      15 16 17 18 19 20 21      12 13 14 15 16 17 18
17 18 19 20 21 22 23      22 23 24 25 26 27 28      19 20 21 22 23 24 25
24 25 26 27 28 29 30      29 30 31                  26 27 28 29 30

        July                     August                  September
Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su
                1  2          1  2  3  4  5  6                   1  2  3
 3  4  5  6  7  8  9       7  8  9 10 11 12 13       4  5  6  7  8  9 10
10 11 12 13 14 15 16      14 15 16 17 18 19 20      11 12 13 14 15 16 17
17 18 19 20 21 22 23      21 22 23 24 25 26 27      18 19 20 21 22 23 24
24 25 26 27 28 29 30      28 29 30 31               25 26 27 28 29 30
31

      October                   November                  December
Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su
                   1             1  2  3  4  5                   1  2  3
 2  3  4  5  6  7  8       6  7  8  9 10 11 12       4  5  6  7  8  9 10
 9 10 11 12 13 14 15      13 14 15 16 17 18 19      11 12 13 14 15 16 17
16 17 18 19 20 21 22      20 21 22 23 24 25 26      18 19 20 21 22 23 24
23 24 25 26 27 28 29      27 28 29 30               25 26 27 28 29 30 31
30 31

print(calendar.weekday(2002,5,16))
#o/p : 0

print(calendar.isleap(2017))
#o/p : False

print(calendar.leapdays(2000,2017))
#o/p: 3

#type & dir(names present in current scope)
print(type(1))
print(type(1.33))
list=[1,4]
print(type(list))

print(dir())
list1=[]
a=10
print(dir())
print(dir(math))
'''o/p
<class 'int'>
<class 'float'>
<class 'list'>
['__annotations__', '__builtins__', '__doc__', '__loader__', '__name__', '__package__', '__spec__', 'list', 'math']
['__annotations__', '__builtins__', '__doc__', '__loader__', '__name__', '__package__', '__spec__', 'a', 'list', 'list1', 'math']
['__doc__', '__loader__', '__name__', '__package__', '__spec__', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atan2', 'atanh', 'ceil', 'comb', 'copysign', 'cos', 'cosh', 'degrees', 'dist', 'e', 'erf', 'erfc', 'exp', 'expm1', 'fabs', 'factorial', 'floor', 'fmod', 'frexp', 'fsum', 'gamma', 'gcd', 'hypot', 'inf', 'isclose', 'isfinite', 'isinf', 'isnan', 'isqrt', 'ldexp', 'lgamma', 'log', 'log10', 'log1p', 'log2', 'modf', 'nan', 'perm', 'pi', 'pow', 'prod', 'radians', 'remainder', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'tau', 'trunc']
'''


